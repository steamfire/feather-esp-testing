#include <SPI.h>
#include <Wire.h>
#include <Adafruit_GFX.h>
#include <Adafruit_SH110X.h>

//For Featherwing OLED 128x64

#define PIN_I2C_POWER 7
#define SCREEN_WIDTH 128 // OLED display width, in pixels
#define SCREEN_HEIGHT 64 // OLED display height, in pixels


//Bitmap Image of a little mars rover 
const unsigned char marsrover [] PROGMEM = {
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7F, 0xFE, 0x00, 0x00, 0x00,
0x00, 0x00, 0x03, 0xF0, 0x0F, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x0F, 0x00, 0x00, 0xF0, 0x00, 0x00,
0x00, 0x00, 0x3C, 0x00, 0x00, 0x3C, 0x00, 0x00, 0x00, 0x00, 0x70, 0x00, 0x00, 0x0E, 0x00, 0x00,
0x00, 0x00, 0xC0, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x01, 0x80, 0x01, 0x00, 0x01, 0x80, 0x00,
0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0xC0, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0x00, 0x60, 0x00,
0x00, 0x08, 0x00, 0x00, 0x00, 0x00, 0x30, 0x00, 0x00, 0x18, 0x00, 0x00, 0x00, 0x00, 0x18, 0x00,
0x00, 0x30, 0xFF, 0xF8, 0x00, 0x00, 0x0C, 0x00, 0x00, 0x30, 0xC0, 0x9C, 0x00, 0x00, 0x0C, 0x00,
0x00, 0x01, 0x80, 0x0C, 0x00, 0x00, 0x06, 0x00, 0x00, 0x61, 0x81, 0xE4, 0x00, 0x00, 0x06, 0x00,
0x00, 0xC1, 0x81, 0xBC, 0x00, 0x00, 0x03, 0x00, 0x00, 0xC1, 0x81, 0x3C, 0x04, 0x00, 0x03, 0x00,
0x00, 0x81, 0x81, 0xF4, 0x04, 0x00, 0x01, 0x00, 0x01, 0x81, 0x80, 0xE4, 0x00, 0x00, 0x01, 0x80,
0x01, 0x81, 0x80, 0x0C, 0x00, 0x00, 0x01, 0x80, 0x01, 0x81, 0xFF, 0xFC, 0x00, 0x30, 0x61, 0x80,
0x01, 0x00, 0xFF, 0xFC, 0x00, 0x78, 0x60, 0x80, 0x01, 0x00, 0x0C, 0x80, 0x00, 0x68, 0x00, 0x80,
0x01, 0x00, 0x08, 0x80, 0x00, 0x68, 0x00, 0x80, 0x01, 0x02, 0x08, 0x80, 0x00, 0x68, 0x00, 0x80,
0x01, 0x00, 0x08, 0x80, 0x00, 0x68, 0x00, 0x80, 0x01, 0x00, 0x08, 0xC0, 0x00, 0x68, 0x00, 0x80,
0x01, 0x00, 0x08, 0x80, 0x40, 0x68, 0x00, 0x80, 0x01, 0x00, 0x08, 0x80, 0x00, 0x68, 0x00, 0x80,
0x01, 0x80, 0x08, 0x80, 0x00, 0x68, 0x01, 0x80, 0x01, 0x87, 0xFF, 0xFF, 0xFF, 0xFF, 0xE1, 0x80,
0x01, 0x87, 0xFF, 0xFF, 0xFF, 0xFF, 0xE1, 0x80, 0x00, 0x84, 0x00, 0x00, 0x00, 0x00, 0x21, 0x00,
0x00, 0xC7, 0xFF, 0xFF, 0xFF, 0xDF, 0xE3, 0x00, 0x00, 0xC1, 0x83, 0x30, 0x10, 0x01, 0x83, 0x00,
0x00, 0x61, 0x83, 0x00, 0x00, 0x01, 0x86, 0x00, 0x00, 0x61, 0x9B, 0x80, 0x00, 0x01, 0x86, 0x00,
0x00, 0x31, 0x90, 0xF0, 0x00, 0x01, 0x8C, 0x00, 0x00, 0x31, 0x90, 0xFF, 0x00, 0x01, 0x8C, 0x00,
0x00, 0x19, 0x99, 0x83, 0xF0, 0x01, 0x98, 0x00, 0x00, 0x0D, 0xBF, 0xF8, 0x3F, 0xF1, 0xB0, 0x00,
0x00, 0x07, 0xEE, 0x3F, 0x83, 0x89, 0xE0, 0x00, 0x00, 0x01, 0xCF, 0xFF, 0xFB, 0x0F, 0x80, 0x00,
0x00, 0x01, 0xDF, 0xFF, 0xFF, 0x0F, 0x00, 0x00, 0x00, 0x01, 0xB0, 0x00, 0x07, 0x9E, 0x00, 0x00,
0x00, 0x1F, 0xB0, 0x07, 0xFD, 0xFB, 0xFC, 0x00, 0x00, 0x7B, 0xE1, 0x8E, 0x79, 0x99, 0xEE, 0x00,
0x00, 0x40, 0xE0, 0x18, 0x1F, 0x0F, 0x03, 0x00, 0x00, 0x80, 0x60, 0x30, 0x0E, 0x07, 0x01, 0x80,
0x01, 0x80, 0x20, 0x30, 0x0C, 0x06, 0x00, 0x80, 0x01, 0x8E, 0x20, 0x21, 0x84, 0x06, 0x38, 0x80,
0x01, 0x8E, 0x20, 0x21, 0x84, 0x06, 0x38, 0x80, 0x01, 0x80, 0x20, 0x30, 0x0C, 0x06, 0x00, 0x80,
0x00, 0xC0, 0x60, 0x30, 0x0C, 0x03, 0x01, 0x80, 0x00, 0xC0, 0xC0, 0x00, 0x18, 0x03, 0x81, 0x00,
0x00, 0x7B, 0xC0, 0x06, 0x70, 0x01, 0xE8, 0x00, 0x00, 0x1F, 0x00, 0x07, 0xE0, 0x00, 0x7C, 0x00
};


Adafruit_SH1107 display = Adafruit_SH1107(SCREEN_HEIGHT, SCREEN_WIDTH, &Wire);


//Oled buttons for Feather 32u4, M0, M4, nrf52840, esp32-s2 and 328p
  #define BUTTON_A  9
  #define BUTTON_B  6
  #define BUTTON_C  5

void setup() {
// turn on the I2C power by setting pin to opposite of 'rest state'
  pinMode(PIN_I2C_POWER, INPUT);
  delay(1);
  bool polarity = digitalRead(PIN_I2C_POWER);
  pinMode(PIN_I2C_POWER, OUTPUT);
  digitalWrite(PIN_I2C_POWER, !polarity);


  
  Serial.begin(115200);
  delay(1500); // wait for serial port to start up
  
  Serial.println("128x64 OLED FeatherWing test");
  delay(250); // wait for the OLED to power up
  display.begin(0x3C, true); // Address 0x3C default

  Serial.println("OLED begun");
  // Show image buffer on the display hardware.
  // Since the buffer is intialized with an Adafruit splashscreen
  // internally, this will display the splashscreen.
  //display.display();
  //delay(1000);


  // Clear the buffer.
  display.clearDisplay();
  display.display();


  display.setRotation(1); // Orient the display to landscape

  // Display the mars rover bitmap coded in this file
  display.drawBitmap(0, 0,  marsrover, 64, 64, 1);
  display.display();
  delay(2000);

  Serial.println("Button test");

  pinMode(BUTTON_A, INPUT_PULLUP);
  pinMode(BUTTON_B, INPUT_PULLUP);
  pinMode(BUTTON_C, INPUT_PULLUP);

  // text display tests
  display.setTextSize(1);
  display.setTextColor(SH110X_WHITE);
  display.setCursor(64,0);
  display.print("HELLO MARS");
  display.display(); // actually display all of the above
}

void loop() {
  if(!digitalRead(BUTTON_A)) display.print("A");
  if(!digitalRead(BUTTON_B)) display.print("B");
  if(!digitalRead(BUTTON_C)) display.print("C");
  delay(10);
  yield();
  display.display();
}
